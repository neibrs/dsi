<?php

/**
 * @file
 * Contains dsi_record.module.
 */

use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function dsi_record_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dsi_record module.
    case 'help.page.dsi_record':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('待办事项。') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function dsi_record_theme() {
  return [
    'dsi_record_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
    'record_by_entity_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_entity_operation().
 */
function dsi_record_entity_operation(EntityInterface $entity) {
  $operations = [];
  switch ($entity->getEntityTypeId()) {
    case 'dsi_client':
    case 'dsi_cases':
      $operations['record'] = [
        'title' => t('Add Record', [], ['context' => 'Add todo']),
        'url' => Url::fromRoute('entity.dsi_record.add_todo', [
            'entity_type' => $entity->getEntityTypeId(),
            'entity_id' => $entity->id(),
          ],
          [
            'attributes' => [
              'class' => [
                'use-ajax',
              ],
              'data-dialog-type' => 'modal',
              'data-dialog-options' => '{"width": "80%"}',
            ],
            'query' => \Drupal::destination()->getAsArray(),
          ]
        ),
        'weight' => 0,
      ];
      break;
  }

  return $operations;
}

/**
 * Implements hook_entity_base_field_info() for client.
 */
function dsi_record_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  switch ($entity_type->id()) {
    case 'dsi_client':
    case 'dsi_cases':
      $fields['record'] = BaseFieldDefinition::create('entity_reference')
        ->setLabel(t('Record'))
        ->setSetting('target_type', 'dsi_record')
        ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
        ->setDisplayOptions('view', [
          'type' => 'entity_reference_table',
          'weight' => 6,
        ])
        ->setDisplayConfigurable('form', TRUE)
        ->setDisplayConfigurable('view', TRUE);
      break;
  }

  return $fields;
}

function template_preprocess_record_by_entity_block(&$variables) {
  $x = 'a';
}

function dsi_record_preprocess_dsi_record_block(&$variables) {
  $x = 'a';
}
