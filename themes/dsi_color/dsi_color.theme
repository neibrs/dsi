<?php

/**
 * @file
 * SUBTHEME theme file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\views\Form\ViewsForm;

function dsi_color_preprocess_html(&$variables) {
  if (in_array(\Drupal::routeMatch()->getRouteName(), ['user.login', 'user.register'])) {
    $variables['attributes']['class'][] = 'page-top';
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu__role_menu.
 */
function dsi_color_preprocess_menu__role_menu(&$variables) {
  $icons = [
    'entity.dsi_client.collection' => 'iconfont icon-kehu4',
    'entity.dsi_cases.collection' => 'iconfont icon-anjian1',
    'entity.dsi_record.collection' => 'iconfont icon-rili',
    'entity.dsi_contract.collection' => 'iconfont icon-kehu4',
  ];
 _eabax_core_set_menu_items_icon($variables['items'], $icons);
}

/**
 * Implements hook_preprocess_HOOK() for menu_local_action.
 */
function dsi_color_preprocess_menu_local_action(array &$variables) {
  $classes = $variables['link']['#options']['attributes']['class'];
  $classes = array_diff($classes, [
    'button',
    'button-action',
    'button--primary',
    'button--small',
  ]);
  $classes[] = 'btn';
  $classes[] = 'btn-info';
  $classes[] = 'btn-sm';
  $variables['link']['#options']['attributes']['class'] = $classes;
}

/**
 * Implements hook_preprocess_HOOK() for links__dropbutton__operations.
 */
function dsi_color_preprocess_links__dropbutton__operations(&$variables) {
  $colors = [
    'edit' => 'text-primary',
    'delete' => 'text-danger',
    'terminate' => 'text-purple',
    'manage-fields' => 'text-aqua',
    'manage-form-display' => 'text-blue',
    'manage-display' => 'text-fuchsia',
    'translate' => 'text-maroon',
    'export' => 'text-warning',
    'disable' => 'text-danger',
    'enable' => 'text-olive',
  ];
  foreach ($variables['links'] as $key => $item) {
    if (isset($colors[$key])) {
      $variables['links'][$key]['link']['#attributes']['class'][] = $colors[$key];
    }
    else {
      $variables['links'][$key]['link']['#attributes']['class'][] = 'text-muted';
    }
    $variables['links'][$key]['link']['#attributes']['class'][] = 'dropdown-item';
  }
}

/**
 * Implements hook_form_alter().
 */
function dsi_color_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // TODO, 添加表单标题到panel.
  $form['#theme_wrappers'] = ['form__panel'];
  $form['#attributes']['class'][] = 'p-0';

  if (isset($form['actions']['delete'])) {
    $form['actions']['delete']['#attributes']['class'] = [
      'btn',
      'btn-danger',
      'btn-sm',
    ];
  }
  if (isset($form['actions']['cancel'])) {
    $form['actions']['cancel']['#attributes']['class'] = [
      'btn',
      'btn-warning',
      'btn-sm',
    ];
  }
  if (isset($form['actions']['edit-add-block'])) {
    $form['actions']['edit-add-block']['#attributes']['class'] = [
      'btn',
      'btn-warning',
      'btn-sm',
    ];
  }

  // Make bulk_form inline.
  $form_object = $form_state->getFormObject();
  if ($form_object instanceof ViewsForm) {
    if (isset($form['header']['bulk_form'])) {
      $form['header']['bulk_form']['#attributes']['class'] = 'form--inline clearfix';
    }
    else {
      $build_info = $form_state->getBuildInfo();
      /** @var \Drupal\views\ViewExecutable $view_executable */
      $view_executable = $build_info['args'][0];
      $base_table = $view_executable->storage->get('base_table');
      $base_table = str_replace('_field_data', '', $base_table);
      if (isset($form['header'][$base_table . '_bulk_form'])) {
        $form['header'][$base_table . '_bulk_form']['#attributes']['class'] = 'form--inline clearfix';
      }
    }
  }
}

function dsi_color_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  unset($form['#theme_wrappers']);
  // 修改登录页面输入框样式.
  $form['#prefix'] = '<div class="login-content p-0">';
  $form['#suffix'] = '</div>';
  $form['#attributes']['class'][] = 'margin-bottom-0';

  unset($form['name']['#description']);
  unset($form['pass']['#description']);
  $form['name']['#title_display'] = 'invisible';
  $form['name']['#wrapper_attributes']['class'] = 'form-group m-b-20';
  $form['name']['#attributes']['class'][] = 'form-control form-control-lg';
  $form['name']['#placeholder'] = '邮箱';

  $form['pass']['#title_display'] = 'invisible';
  $form['pass']['#wrapper_attributes']['class'] = 'form-group m-b-20';
  $form['pass']['#attributes']['class'][] = 'form-control form-control-lg';
  $form['pass']['#placeholder'] = '密码';

  $form['register_forgot'] = [
    '#type' => 'container',
    '#weight' => 900,
    '#attributes' => [
      'class' => 'row',
    ],
  ];
  $form['register_forgot']['register'] = [
    '#type' => 'item',
    '#markup' => '<p class="margin medium-small">' . Link::createFromRoute('注册', 'user.register')->toString() . '</p>',
    '#wrapper_attributes' => [
      'class' => [
        'input-field',
        'col',
        's6',
      ],
    ],
  ];
  $form['register_forgot']['forgot'] = [
    '#type' => 'item',
    '#markup' => '<p class="margin right-align medium-small pull-right">' . Link::createFromRoute('忘记密码?', 'user.pass')->toString() . '</p>',
    '#wrapper_attributes' => [
      'class' => [
        'input-field',
        'col',
        's6',
      ],
    ],
  ];

  if (isset($form['actions']['submit'])) {
      $classes = isset($form['actions']['submit']['#attributes']['class']) ? $form['actions']['submit']['#attributes']['class'] : [];

      // button 移除不成功
      $classes = array_diff($classes, [
        'button',
        'button--primary',
      ]);
      $classes[] = 'btn';
      $classes[] = 'btn-lg';
      $classes[] = 'btn-block';
      $classes[] = 'btn-success';
      $form['actions']['submit']['#attributes']['class'] = $classes;
  }
}

/**
 * @see dsi_color_form_user_login_form_alter, TODO
 * TODO, 注册表单，中屏时，排版异常.
 */
function dsi_color_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  unset($form['#theme_wrappers']);
  // Unset description.
  foreach($form['account'] as $key => $item ) {
    if (strpos($key, '#') !== 0) {
      unset($form['account'][$key]['#theme_wrappers']);
      $form['account'][$key]['#attributes']['class'][] = 'form-control';
      $form['account'][$key]['#title_display'] = 'invisible';
      $form['account'][$key]['#placeholder'] = isset($form['account'][$key]['#title']) ? $form['account'][$key]['#title'] : [];
      if (isset($form['account'][$key]['#description'])) {
        unset($form['account'][$key]['#description']);
      }
    }
  }


  if (isset($form['actions']['submit'])) {
    $classes = isset($form['actions']['submit']['#attributes']['class']) ? $form['actions']['submit']['#attributes']['class'] : [];

    // button 移除不成功
    $classes = array_diff($classes, [
      'button',
      'button--primary',
    ]);
    $classes[] = 'btn';
    $classes[] = 'btn-lg';
    $classes[] = 'btn-block';
    $classes[] = 'btn-primary';
    $form['actions']['submit']['#attributes']['class'] = $classes;
  }
}

/**
 * 找到element_type === password的相关钩子再处理.
 */
function dsi_color_preprocess_input__password(&$variables) {
  $variables['attributes']['class'][] = 'form-control';
  $variables['title_display'] = 'invisible';
  $variables['label_display'] = 'invisible';
}

function dsi_color_preprocess_views_view_table(&$variables) {
  $variables['attributes']['class'][] = 'table table-bordered table-td-valign-middle dataTable no-footer dtr-inline collapsed';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_views_view_fullcalendar(&$variables) {
  $variables['#attached']['library'][] = 'dsi_color/color.page.fullcalendar';
}

function dsi_color_preprocess_views_view(&$variables) {
  /** @var \Drupal\views\ViewExecutable $view */
  $variables['view_label'] = $variables['view']->storage->label();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_input__submit(&$variables) {
  $class = array_diff($variables['attributes']['class'], [
    'button',
    'btn-primary'
  ]);
  $variables['attributes']['class'] = $class;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_select(&$variables) {
//  $variables['attributes']['class'] = 'form-control';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_file_managed_file(&$variables) {
  $variables['#attached']['library'][] = 'dsi_color/color.page.multiple_file_upload';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_input__date(&$variables) {
  $variables['#attached']['library'][] = 'dsi_color/color.page.datepicker';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsi_color_preprocess_datetime_wrapper(&$variables) {
  $variables['#attached']['library'][] = 'dsi_color/color.page.datepicker';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dsi_color_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  unset($form['#theme_wrappers']);
}