<?php

namespace Drupal\eabax_workflows\Plugin\Menu\LocalAction;

use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\eabax_core\Plugin\Menu\LocalAction\AddDestination;

class TransitionApplyLocalAction extends AddDestination {

  /**
   * {@inheritdoc}
   */
  public function getRouteParameters(RouteMatchInterface $route_match) {
    // TODO: Change the autogenerated stub
    $route_parameters = parent::getRouteParameters($route_match);

    // 如果视图替换canonical，getParameters()会返回视图的参数，只有getRowParameters()返回canonical原来的参数.
    $parameters = $route_match->getRawParameters()->all();
    $route_parameters['entity_id'] = reset($parameters);

    return $route_parameters;
  }

  /**
   * {@inheritdoc}
   */
  public function getCacheTags() {
    $route_match = \Drupal::routeMatch();

    // 如果视图替换canonical，getParameters()会返回视图的参数，只有getRowParameters()返回canonical原来的参数.
    $parameters = $route_match->getRawParameters()->all();
    $parameters_keys = array_keys($parameters);
    $entity_type_id = reset($parameters_keys);
    $entity_id = reset($parameters);
    $entity = \Drupal::entityTypeManager()->getStorage($entity_type_id)->load($entity_id);
    $tags = Cache::mergeTags(parent::getCacheTags(), $entity->getCacheTags());

    return $tags;
  }

  /**
   * {@inheritdoc}
   */
  public function getCacheContexts() {
    return Cache::mergeContexts(parent::getCacheContexts(), ['url']);
  }

}
